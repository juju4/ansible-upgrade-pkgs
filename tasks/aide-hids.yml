---

## assess if aide present and current db
- name: Linux | ensure aide is installed
  ansible.builtin.package: name=aide state=present
  when: ansible_system == "Linux" and ansible_distribution != 'NA' and ansible_os_family != "Alpine"
  register: pkg_result
  until: pkg_result is success
- name: Check if aide binary is present
  ansible.builtin.stat: path={{ aide_bin }}
  register: hidsaide
  tags:
    - aidehids
- name: Check if aide current db is present
  ansible.builtin.stat: path={{ aide_db }}
  register: aidedb
  tags:
    - aidehids
- name: Check if aide new db is present
  ansible.builtin.stat: path={{ aide_dbnew }}
  register: aidedbnew
  tags:
    - aidehids


- name: Replacing missing current db with aide.db.new
  ansible.builtin.command: "mv {{ aide_dbnew }} {{ aide_db }}"
  when: hidsaide.stat.exists and not aidedb.stat.exists and aidedbnew.stat.exists
# - debug: var=ansible_os_family

- name: Non-Darwin system
  block:

    - name: Non-darwin | update aide database
      ansible.builtin.shell: |
        set -o pipefail
        {{ item }}
      with_items:
        - "{{ aide_bin }} -u > /tmp/aide.log 2>&1"
        - "savelog -c {{ upgrade_aidedb_rotate }} {{ aide_db }}"
        - "mv {{ aide_dbnew }} {{ aide_db }}"
      args:
        executable: /bin/bash
      when: hidsaide.stat.exists and (aidedb.stat.exists or aidedbnew.stat.exists)
      failed_when: false
      async: 3600
      poll: 180
      tags:
        - aidehids

    - name: Init aide database
      ansible.builtin.command: "{{ item }}"
      with_items:
        - "{{ aide_bin }} -i"
        - "mv {{ aide_dbnew }} {{ aide_db }}"
      when: hidsaide.stat.exists and not aidedb.stat.exists
      failed_when: false
      tags:
        - aidehids
  when: ansible_os_family != "Darwin"

- name: Darwin system
  block:
    - name: Darwin | update aide database
      ansible.builtin.shell: |
        set -o pipefail
        {{ item }}
      with_items:
        - "[ -f /opt/local/var/log/aide/aide.log ] && mv /opt/local/var/log/aide/aide.log
           /opt/local/var/log/aide/aide.log.0"
        - "{{ aide_bin }} -u > /opt/local/var/log/aide/aide.log 2>&1"
        - "for i in `seq 1 {{ upgrade_aidedb_rotate }}`; do n=`expr {{ upgrade_aidedb_rotate }} - $i`;
           [ -f {{ aide_db }}.$n ] &&
           mv {{ aide_db }}.$n {{ aide_db }}.`expr {{ upgrade_aidedb_rotate }} + 1 - $i`; done"
        - "mv {{ aide_db }} {{ aide_db }}.0"
        - "mv {{ aide_dbnew }} {{ aide_db }}"
      args:
        executable: /bin/bash
      when: >
        hidsaide.stat.exists and (aidedb.stat.exists or aidedbnew.stat.exists) and
        ansible_os_family == "Darwin" and darwin_updated is defined and darwin_updated
      failed_when: false
      async: 3600
      poll: 180
      tags:
        - aidehids

    - name: Darwin | init aide database
      ansible.builtin.command: "{{ item }}"
      with_items:
        - "{{ aide_bin }} -i"
        - "mv {{ aide_dbnew }} {{ aide_db }}"
      when: hidsaide.stat.exists and not aidedb.stat.exists
      failed_when: false       # aide -i
      tags:
        - aidehids
  when: ansible_os_family == "Darwin"
