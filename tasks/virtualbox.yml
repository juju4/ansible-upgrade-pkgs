---

## Virtualbox guest additions?
## https://github.com/BTBurke/skeleton-vagrant-ansible/blob/master/provisioning/vboxadditions.yaml

- name: host | check if Virtualbox installed
  local_action: stat path=/usr/bin/virtualbox
  register: localvbox
  become: no
#- debug: var=localvbox
- name: Find Host Virtualbox Version
  become: no
  local_action: shell virtualbox -h | awk '/Oracle VM VirtualBox Manager/ {split($0,a," "); print a[5]}'
  #local_action: shell "virtualbox -h | awk '/Oracle VM VirtualBox Manager/ {split($0,a,\" \"); print a[5]}'" # NOK
  register: hostV
  when: localvbox.stat.exists
  changed_when: False
    
- name: Find Guest Additions Version
  shell: "modinfo vboxguest | awk '/^version:/ { print $2 }'"
  register: guestV
  changed_when: False
    
- debug: var=hostV
  when: (verbose is defined and verbose)
- debug: var=guestV
  when: (verbose is defined and verbose)
- stat: path=/vagrant
  register: vagrantdir
- name: virtualbox guest - vagrant
  set_fact:
    isodir: /vagrant/{{hostV.stdout}}
  when: vagrantdir.stat.exists
- name: virtualbox guest - generic box
  set_fact:
    isodir: /tmp/{{hostV.stdout}}
  when: not vagrantdir.stat.exists
- stat: path="/{{ isodir }}/VBoxGuestAdditions_{{hostV.stdout}}.iso"
  register: vboxguestadditions
  when: hostV.stdout is defined
- name: Download Guest Additions Installer (when required)
  get_url: "dest={{ isodir }} url=http://download.virtualbox.org/virtualbox/{{hostV.stdout}}/VBoxGuestAdditions_{{hostV.stdout}}.iso "
  when: hostV is defined and hostV.stdout != "" and guestV is defined and guestV.stdout != "" and hostV.stdout != guestV.stdout and not vboxguestadditions.stat.exists
    
- stat: path="{{ isodir }}/VBoxGuestAdditions_{{hostV.stdout}}.iso"
  register: vboxguestadditions
    #      when: vboxguest is defined and vboxguest and hostV.stdout is defined
  when: hostV.stdout is defined
- name: Mount Guest Additions .iso (when required)
  #shell: mount /tmp/VBoxGuestAdditions_{{hostV.stdout}}.iso -o loop /mnt creates=/mnt/VBoxLinuxAdditions.run
  mount: name=/mnt src="/{{ isodir }}/VBoxGuestAdditions_{{hostV.stdout}}.iso" opts=loop,ro fstype=iso9660 state=mounted
  when: hostV is defined and hostV.stdout != "" and guestV is defined and guestV.stdout != "" and hostV.stdout != guestV.stdout and vboxguestadditions.stat.exists
    
## as role/harden protection
- stat: path=/etc/apt/apt.conf.d/99security
  register: hardenapt
- command: "chattr -R -i /lib"
  ignore_errors: true
  when: hardenapt.stat.exists and ((hostV is defined and hostV.stdout != "" and guestV is defined and guestV.stdout != "" and hostV.stdout != guestV.stdout) or (virtualbox_host is defined and virtualbox_host))
- name: Install Guest Additions (when required)
  shell: /mnt/VBoxLinuxAdditions.run --nox11 -- --force
  when: hostV is defined and hostV.stdout != "" and guestV is defined and guestV.stdout != "" and hostV.stdout != guestV.stdout
  become: yes
  ignore_errors: yes  # Need to ignore errors here because no windowing system is installed on server image.  No way to override. 
- name: Ensure virtualbox module is build for latest kernel
  command: /sbin/rcvboxdrv setup
  become: yes
  when: virtualbox_host is defined and virtualbox_host
- command: "chattr -R +i /lib"
  ignore_errors: true
  when: hardenapt.stat.exists and ((hostV is defined and hostV.stdout != "" and guestV is defined and guestV.stdout != "" and hostV.stdout != guestV.stdout) or (virtualbox_host is defined and virtualbox_host))
    
    #    - name: Halting the VM since Guest Additions Updated
    #      local_action: command vagrant halt
    #      become: no
    #      when: hostV.stdout != guestV.stdout
    
    #    - name: Restarting the VM without provisioning
    #      local_action: command vagrant up --no-provision
    #      become: no
    #      when: hostV.stdout != guestV.stdout
    
- name: apt | Mark VM for reboot since Guest Additions Updated
  file: path=/var/run/reboot-required state=touch
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and hostV is defined and hostV.stdout != "" and guestV.stdout != "" and hostV.stdout != guestV.stdout

