---

- name: Debian | Update cache
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: "{{ upgradepkgs_apt_cache_valid_time | default('3600') }}"
  become: yes

- name: Debian | ensure appropriate packages are present
  ansible.builtin.apt:
    name: aptitude
    state: present
  register: pkg_result
  until: pkg_result is success

- name: Debug | var ansible_architecture
  ansible.builtin.debug:
    var: ansible_architecture
    verbosity: 1

- name: Debian | ensure update-notifier-common package is present
  ansible.builtin.apt:
    name: "{{ apt_notifier_pkg }}"
    state: present
  register: pkg_result
  until: pkg_result is success
  when:
    - ansible_architecture != 'armv7l'
    - ansible_architecture != 'armv6l'

## FIXME! http://askubuntu.com/questions/441921/why-does-usr-lib-update-notifier-apt-check-not-agree-with-apt-get-upgrade
- name: Debian | Check if there are packages available to be installed/upgraded
  ansible.builtin.command: apt list --upgradeable
  register: packages
  changed_when: False
  tags:
    - upgrade
  when:
    - ansible_architecture != 'armv7l'
    - ansible_architecture != 'armv6l'

# fixme: merge with cron.daily check in playbook
- name: Debian | ensure procps package is present
  ansible.builtin.apt:
    name: procps
    state: present
  register: pkg_result
  until: pkg_result is success
- name: Debian | Ensure no conflicting process running
  ansible.builtin.command: ps aux
  register: ps
  changed_when: False

- name: Debian | Conflict
  when:
    - '"/usr/lib/apt/apt.systemd.daily " in ps.stdout'
  block:
    - name: Debian | Get process age
      ansible.builtin.set_fact:
        # root     64256  0.0  0.0   2892     0 ?        Ss   Aug03   0:00 /bin/sh /usr/lib/apt/apt.systemd.daily update
        ps_age: "{{ ps.stdout | regex_search(' ([A-Z][a-z][a-z][0-9:]+)\\s+[0-9]+:[0-9]+\\s+\/bin\/sh \/usr\/lib\/apt\/apt.systemd.daily ', '\\1', multiline=True, ignorecase=True) }}"

    - name: Debian | Conflicting process
      ansible.builtin.fail:
        msg: "A conflicting process is running (age: {{ ps_age | first }}). Retry later."
      when:
        - ps_age | length > 0

## https://github.com/ansible/ansible/issues/11601
## https://github.com/ansible/ansible-modules-core/issues/1741
## = dist is not enough...
## Note: some upgrade can fail if /run is full/too small.
##      => mount -o remount,size=200m /run
- name: Upgrade
  block:
    - name: Debian | upgrade all packages to the latest version (full)
      ansible.builtin.apt:
        upgrade: full
      tags:
        - upgrade
      async: 3600
      poll: 180
      register: aptf
      until: aptf is success

    - name: Debian | Autoremove unused packages
      ansible.builtin.apt:
        autoremove: yes
      register: aptr
  rescue:
    - name: Include immutable
      ansible.builtin.include_tasks: immutable.yml
      vars:
        target_dir: /lib/systemd/system
        state: pre
    - name: Debian | upgrade all packages to the latest version (full) 2
      ansible.builtin.apt:
        upgrade: full
      tags:
        - upgrade
      async: 3600
      poll: 180
      register: aptf
      until: aptf is success
    - name: Debian | Autoremove unused packages 2
      ansible.builtin.apt:
        autoremove: yes
      register: aptr
    - name: Include immutable
      ansible.builtin.include_tasks: immutable.yml
      vars:
        target_dir: /lib/systemd/system
        state: post

- name: Need HIDS update
  ansible.builtin.set_fact:  # noqa no-handler
    upgrade_need_hidsupdate: true
  when: aptf.changed or aptr.changed

- name: Debian | Check if a reboot is required
  register: file
  ansible.builtin.stat:
    path: /var/run/reboot-required
    get_checksum: no
  tags:
    - upgrade

- name: Need to reboot system? yes and will do
  ansible.builtin.set_fact:
    upgrade_need_reboot: true
  when: file.stat.exists is defined and file.stat.exists

- name: Ubuntu
  when: file.stat.exists is defined and file.stat.exists and ansible_distribution == 'Ubuntu'
  block:
    - name: Check if canonical live patch installed
      ansible.builtin.stat:
        path: /snap/bin/canonical-livepatch
      register: livepatch
    - name: Is canonical live enabled
      ansible.builtin.command: "/snap/bin/canonical-livepatch status"
      register: livepatchstatus
      ignore_errors: true
      changed_when: false
      when: livepatch.stat.exists
    - name: Need to reboot system?
      ansible.builtin.debug:
        msg: "You will need to reboot system but livepatch is enabled. Do at your leisure :)"
      when: >
        livepatch.stat.exists and livepatchstatus is defined and
        livepatchstatus.stdout is defined and
        "fully-patched: true" in livepatchstatus.stdout
    - name: Set fact upgrade_need_reboot
      ansible.builtin.set_fact:
        upgrade_need_reboot: false
      when: >
        livepatch.stat.exists and livepatchstatus is defined and
        livepatchstatus.stdout is defined and
        "fully-patched: true" in livepatchstatus.stdout

- name: Debug | var upgrade_need_reboot
  ansible.builtin.debug:
    var: upgrade_need_reboot
